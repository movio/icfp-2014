LDC 0
LDF 4
CONS
RTN

;$STEP: ;AISTATE GAMESTATE
LDC 0  ; NEW AISTATE

LD 0 1 ; GAME STATE
LDC 1
LDF 94
AP 2   ; PACMAN STATE
LDC 1
LDF 94
AP 2   ; PACMAN (X Y)
LDF 118
AP 1   ; [U D L R]

LD 0 1 ; GAME STATE
LDC 0
LDF 94
AP 2   ; WORLD
LDF 69
AP 1
LDF 277
AP 2

; SET 3/4/5/6 TO 1
LDF 76
LDF 277
AP 2

; ZIP-WITH-INDEX
LDF 186
AP 1

BRK

; FILTER OUT OPPOSITE DIRECTION
LDC 2
LDC 3
LDC 0
LDC 1
LDC 4
LDF 261
AP 1
LD 0 1 ; GAME STATE
LDC 1
LDF 94
AP 2   ; PACMAN STATE
LDC 2
LDF 94
AP 2   ; PACMAN DIRECTION
LDF 94
AP 2   ; OPPOSITE DIRECTION
LDF 58
AP 1
LDF 168
AP 2

BRK

; MAX BY CAR
LDC 0
LDC 0
CONS ; (0 0)
LDF 84
LDF 301
AP 3

; GET DIRECTION FROM CONS
CDR

; DONE!
CONS
RTN

;$GEN-CDR-NOT-EQ: ;X
LDF 60
RTN
;$GEN-CDR-NOT-EQ-INNER: ;X
LD 1 0
LD 0 0
CDR
CEQ
TSEL 65 67
;$GEN-CDR-NOT-EQ-INNER-EQ:
LDC 0
RTN
;$GEN-CDR-NOT-EQ-INNER-NEQ:
LDC 1
RTN

;$GEN-WORLD-FUN: ;WORLD
LDF 71
RTN
;$GEN-WORLD-FUN-INNER: ;(X Y)
LD 1 0
LD 0 0
LDF 108
AP 2
RTN

;$NORMALIZE: ;X
LD 0 0
LDC 3
CGTE
TSEL 80 82
;$NORMALIZE-TRUE:
LDC 1
RTN
;$NORMALIZE-FALSE:
LD 0 0
RTN

;$MAX-BY-CAR: ; MAX NEXT
LD 0 0
CAR
LD 0 1
CAR
CGTE
TSEL 90 92
;$MAX-BY-CAR-FIRST:
LD 0 0
RTN
;$MAX-BY-CAR-SECOND:
LD 0 1
RTN

;$NTH: ;LST I
LD 0 1 ;I
LDC 0
CEQ
TSEL 98 101
;$NTH1:
LD 0 0 ;LST
CAR
RTN
;$NTH2:
LD 0 0 ;LST
CDR
LD 0 1 ;I
LDC 1
SUB
LDF 94
TAP 2

;$WORLD: ;WORLD (X Y)
LD 0 0 ;WORLD
LD 0 1
CDR    ;Y
LDF 94
AP 2
LD 0 1
CAR    ;X
LDF 94
AP 2
RTN

;$URDL: ;(X Y) RETURNS [U R D L]
LD 0 0
LDF 134
AP 1
LD 0 0
LDF 142
AP 1
LD 0 0
LDF 150
AP 1
LD 0 0
LDF 158
AP 1
LDC 4
LDF 261
AP 1
RTN

;$U: ;(X Y)
LD 0 0
CAR
LD 0 0
CDR
LDC 1
SUB
CONS
RTN

;$R: ;(X Y)
LD 0 0
CAR
LDC 1
ADD
LD 0 0
CDR
CONS
RTN

;$D: ;(X Y)
LD 0 0
CAR
LD 0 0
CDR
LDC 1
ADD
CONS
RTN

;$L: ;(X Y)
LD 0 0
CAR
LDC 1
SUB
LD 0 0
CDR
CONS
RTN


BRK
; LIST FUNCTIONS
BRK

;$FILTER: ; LST PRED
LD 0 0   ; LST
LDC 0    ; NIL
LDF 176
LDF 301
AP 3
LDF 291
AP 1
RTN
;$FILTER-PRED: ; ACC NEXT
LD 0 1   ; NEXT
LD 1 1   ; PRED
AP 1
TSEL 180 184
;$FILTER-PRED-TRUE:
LD 0 1   ; NEXT
LD 0 0   ; ACC
CONS
RTN
;$FILTER-PRED-FALSE:
LD 0 0   ; ACC
RTN

;$ZIP-WITH-INDEX: ; LST
LD 0 0       ; LST
LD 0 0
LDF 224
AP 1         ; LEN LST
LDF 241
AP 1         ; 0..N
LDF 195
AP 2         ; ZIP LST 0..N
RTN

;$ZIP: ; A B
LD 0 0
LD 0 1
LDC 0  ; NIL
LDF 201
AP 3
RTN
;$ZIP_ITER: ; A B OUT
LD 0 0
ATOM
TSEL 207 204
;$ZIP_NEXT:
LD 0 1
ATOM
TSEL 207 211
;$ZIP_DONE:
LD 0 2
LDF 291
AP 1
RTN
;$ZIP_CONT:
LD 0 0
CDR    ; TAIL A
LD 0 1
CDR    ; TAIL B
LD 0 0
CAR    ; HEAD A
LD 0 1
CAR    ; HEAD B
CONS   ; (A B)
LD 0 2
CONS   ; (A B) :: OUT
LDF 201
TAP 3

;$LENGTH: ;LST
LDC 0
LD 0 0
LDF 229
AP 2
RTN
;$LENGTH_ITER: ; LEN LST
LD 0 1
ATOM
TSEL 232 234
;$LENGTH_DONE:
LD 0 0
RTN
;$LENGTH_CONT:
LD 0 0
LDC 1
ADD     ; LEN+1
LD 0 1
CDR     ; TAIL LST
LDF 229
TAP 2

;$RANGE: ;N
LDC 0
LD 0 0 ; N
LDF 246
AP 2
RTN
;$RANGE_ITER: ; I N
LD 0 0
LD 0 1
CEQ
TSEL 250 254
;$RANGE_DONE:
LD 0 1  ; N
LDF 261
AP 1
RTN
;$RANGE_CONT:
LD 0 0 ; I, LEFT ON STACK FOR MK-LIST
LD 0 0
LDC 1
ADD    ; I+1
LD 0 1 ; N
LDF 246
TAP 2


;$MK-LIST: ;X
LDC 0   ; NIL
LD 0 0
LDF 266
AP 1
RTN

;$MK-CONS: ;X
LD 0 0
LDC 0
CEQ
TSEL 270 271
;$MK-CONS-ZERO:
RTN
;$MK-CONS-ELSE:
CONS
LD 0 0
LDC 1
SUB
LDF 266
TAP 1

;$MAP: ; LST FUN
LD 0 0   ; LST
LDC 0    ; NIL
LDF 285
LDF 301
AP 3
LDF 291
AP 1
RTN
;$APPLY-FUN: ; ACC NEXT
LD 0 1   ; NEXT
LD 1 1   ; FUN
AP 1
LD 0 0   ; ACC
CONS
RTN

;$REVERSE: ; LST
LD 0 0   ; LST
LDC 0    ; NIL
LDF 297
LDF 301
AP 3
RTN
;$REVERSE_FUN: ; ACC NEXT
LD 0 1   ; NEXT
LD 0 0   ; ACC
CONS
RTN

;$FOLD-LEFT: ; LST ACC FUN
LD 0 0   ; LST
ATOM
TSEL 304 306
;$FOLD-LEFT-BASE:
LD 0 1   ; ACC
RTN
;$FOLD-LEFT-REC:
LD 0 0
CDR      ; TAIL LST
LD 0 1
LD 0 0
CAR
LD 0 2
AP 2     ; FUN ACC (HEAD LIST)
LD 0 2   ; FUN
LDF 301
TAP 3
